RULE entering method isGoodTarget
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT ENTRY
IF true
DO trace("[BM][isGoodTarget invoked!][Method Entry]ID=0,\n")
ENDRULE

RULE  isGoodTarget
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 612
IF true
DO trace("[BM][isGoodTarget]ID=1," + ($storage.getStorageType() != $storageType) + "\n")
ENDRULE

RULE if (storage.getState() == State.READ_ONLY_SHARED)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 618
IF true
DO trace("[BM][isGoodTarget]ID=2," + ($storage.getState() == $State.READ_ONLY_SHARED) + "\n")
ENDRULE

RULE if (node.isDecommissionInProgress() || node.isDecommissioned())
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 624
IF true
DO trace("[BM][isGoodTarget]ID=3," + ($node.isDecommissionInProgress() || $node.isDecommissioned()) + "\n")
ENDRULE

RULE  if (avoidStaleNodes) 
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 629
IF true
DO trace("[BM][isGoodTarget]ID=4," + ($avoidStaleNodes) + "\n")
ENDRULE

RULE  if (node.isStale(this.staleInterval))
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 630
IF true
DO trace("[BM][isGoodTarget]ID=5," + "\n")
ENDRULE

RULE if (requiredSize > node.getRemaining() - scheduledSize)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 638
IF true
DO trace("[BM][isGoodTarget]ID=6," + ($requiredSize > $node.getRemaining() - $scheduledSize) + "\n")
ENDRULE

RULE  if (considerLoad)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 644
IF true
DO trace("[BM][isGoodTarget]ID=7," + ($considerLoad) + "\n")
ENDRULE

RULE  if (nodeLoad > maxLoad)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 647
IF true
DO trace("[BM][isGoodTarget]ID=8," + ($nodeLoad > $maxLoad) + "\n")
ENDRULE

RULE  for(DatanodeStorageInfo resultStorage : results)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 657
IF true
DO trace("[BM][isGoodTarget]ID=9," + "" + "\n")
ENDRULE

RULE if (rackname.equals(resultStorage.getDatanodeDescriptor().getNetworkLocation()))
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 658
IF true
DO trace("[BM][isGoodTarget]ID=10," + "" + "\n"))
ENDRULE

RULE  if (counter>maxTargetPerRack)
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 663
IF true
DO trace("[BM][isGoodTarget]ID=11," + ($counter > $maxTargetPerRack) + "\n")
ENDRULE

RULE isGoodTarget return true
CLASS org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault
METHOD isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType) 
COMPILE
AT LINE 667
IF true
DO trace("[BM][isGoodTarget]ID=12," + "true" + "\n")
ENDRULE

