{"chooseRandom(int,java.lang.String,java.util.Set,long,int,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "addIfIsGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,java.util.Set,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "isGoodTarget(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,long,int,boolean,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "chooseLocalStorage(org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType,boolean)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "rollBlocksScheduled(long)": "org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor", "<init>(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,long,long,long,long,long,long,long,int,java.lang.String,org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates)": "org.apache.hadoop.hdfs.protocol.DatanodeInfo", "setRemaining(long)": "org.apache.hadoop.hdfs.protocol.DatanodeInfo", "chooseTarget(int,org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "chooseTargets(org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicy,java.util.Set)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockManager$ReplicationWork", "chooseRemoteRack(int,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.util.Set,long,int,java.util.List,boolean,org.apache.hadoop.hdfs.StorageType)": "org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault", "set(long,long,long)": "org.apache.hadoop.hdfs.protocol.Block", "setNumBytes(long)": "org.apache.hadoop.hdfs.protocol.Block"}